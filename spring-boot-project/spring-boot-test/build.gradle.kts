/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id("org.springframework.boot.java-conventions")
}

dependencies {
    api(project(":spring-boot"))
    api("com.fasterxml.jackson.core:jackson-databind:2.9.9.3")
    api("com.google.code.gson:gson:2.8.5")
    api("com.jayway.jsonpath:json-path:2.4.0")
    api("io.projectreactor.netty:reactor-netty:0.8.12.RELEASE")
    api("javax.json.bind:javax.json.bind-api:1.0")
    api("javax.servlet:javax.servlet-api:4.0.1")
    api("org.apache.httpcomponents:httpclient:4.5.10")
    api("org.hamcrest:hamcrest-core:1.3")
    api("org.jetbrains.kotlin:kotlin-stdlib:1.2.71")
    api("org.jetbrains.kotlin:kotlin-reflect:1.2.71")
    api("org.junit.jupiter:junit-jupiter-api:5.3.2")
    api("org.skyscreamer:jsonassert:1.5.0")
    api("org.seleniumhq.selenium:htmlunit-driver:2.33.0")
    api("org.seleniumhq.selenium:selenium-api:3.14.0")
    api("org.springframework:spring-web:5.1.10.RELEASE")
    api("org.springframework:spring-webflux:5.1.10.RELEASE")
    api("net.sourceforge.htmlunit:htmlunit:2.33")
    testImplementation("javax.json:javax.json-api:1.1.4")
    testImplementation(project(":spring-boot-test-support"))
    testImplementation("ch.qos.logback:logback-classic:1.2.3")
    testImplementation("org.apache.tomcat.embed:tomcat-embed-core:9.0.26")
    testImplementation("org.codehaus.groovy:groovy:2.5.8")
    testImplementation("org.codehaus.groovy:groovy-xml:2.5.8")
    testImplementation("org.apache.johnzon:johnzon-jsonb:1.1.13")
    testImplementation("org.jetbrains.kotlin:kotlin-runtime:1.2.71")
    testImplementation("org.slf4j:jcl-over-slf4j:1.7.28")
    testImplementation("org.slf4j:slf4j-api:1.7.28")
    testImplementation("org.spockframework:spock-core:1.0-groovy-2.4")
    testImplementation("org.springframework:spring-webmvc:5.1.10.RELEASE")
    testImplementation("com.nhaarman:mockito-kotlin:1.6.0")
}

description = "Spring Boot Test"

val testsJar by tasks.registering(Jar::class) {
    archiveClassifier.set("tests")
    from(sourceSets["test"].output)
}

(publishing.publications["maven"] as MavenPublication).artifact(testsJar)
