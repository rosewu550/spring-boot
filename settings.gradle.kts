/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

pluginManagement {
    // Include 'plugins build' to define convention plugins.
    includeBuild("build-logic")
}

rootProject.name = "spring-boot-build"
include(":spring-boot-cli")
include(":spring-boot-server-tests")
include(":spring-boot-starter-log4j2")
include(":spring-boot-starter")
include(":spring-boot-starter-activemq")
include(":spring-boot-starter-cache")
include(":spring-boot-autoconfigure")
include(":spring-boot-starter-thymeleaf")
include(":spring-boot-configuration-processor-tests")
include(":spring-boot-starters")
include(":spring-boot-samples-invoker")
include(":spring-boot-starter-data-ldap")
include(":spring-boot-dependencies")
include(":spring-boot-tools")
include(":spring-boot-starter-jdbc")
include(":spring-boot")
include(":spring-boot-starter-data-rest")
include(":spring-boot-starter-data-mongodb-reactive")
include(":spring-boot-starter-groovy-templates")
include(":spring-boot-starter-mustache")
include(":spring-boot-starter-freemarker")
include(":spring-boot-starter-data-neo4j")
include(":spring-boot-maven-plugin")
include(":spring-boot-autoconfigure-processor")
include(":spring-boot-starter-data-redis-reactive")
include(":spring-boot-starter-web")
include(":spring-boot-starter-oauth2-client")
include(":spring-boot-starter-artemis")
include(":spring-boot-starter-tomcat")
include(":spring-boot-starter-data-jpa")
include(":spring-boot-gradle-plugin")
include(":spring-boot-starter-data-mongodb")
include(":spring-boot-starter-security")
include(":spring-boot-starter-batch")
include(":spring-boot-starter-webflux")
include(":spring-boot-starter-cloud-connectors")
include(":spring-boot-actuator")
include(":spring-boot-starter-quartz")
include(":spring-boot-properties-migrator")
include(":spring-boot-loader-tools")
include(":spring-boot-launch-script-tests")
include(":spring-boot-actuator-autoconfigure")
include(":spring-boot-starter-jooq")
include(":spring-boot-starter-aop")
include(":spring-boot-starter-json")
include(":spring-boot-starter-oauth2-resource-server")
include(":spring-boot-integration-tests")
include(":spring-boot-starter-amqp")
include(":spring-boot-devtools")
include(":spring-boot-project")
include(":spring-boot-test-autoconfigure")
include(":spring-boot-starter-data-elasticsearch")
include(":spring-boot-starter-hateoas")
include(":spring-boot-configuration-processor")
include(":spring-boot-starter-logging")
include(":spring-boot-starter-websocket")
include(":spring-boot-starter-data-solr")
include(":spring-boot-starter-mail")
include(":spring-boot-starter-jersey")
include(":spring-boot-starter-data-couchbase-reactive")
include(":spring-boot-antlib")
include(":spring-boot-starter-data-cassandra-reactive")
include(":spring-boot-starter-undertow")
include(":spring-boot-parent")
include(":spring-boot-starter-data-jdbc")
include(":spring-boot-starter-reactor-netty")
include(":spring-boot-starter-data-couchbase")
include(":spring-boot-starter-jta-bitronix")
include(":spring-boot-test-support")
include(":spring-boot-starter-web-services")
include(":spring-boot-test")
include(":spring-boot-starter-parent")
include(":spring-boot-hibernate52-tests")
include(":spring-boot-starter-data-cassandra")
include(":spring-boot-configuration-metadata")
include(":spring-boot-starter-jetty")
include(":spring-boot-loader")
include(":spring-boot-starter-test")
include(":spring-boot-starter-jta-atomikos")
include(":spring-boot-starter-integration")
include(":spring-boot-devtools-tests")
include(":spring-boot-starter-actuator")
include(":spring-boot-starter-data-redis")
include(":spring-boot-starter-validation")
include(":spring-boot-docs")
include(":spring-boot-tests")
project(":spring-boot-cli").projectDir = file("spring-boot-project/spring-boot-cli")
project(":spring-boot-server-tests").projectDir = file("spring-boot-tests/spring-boot-integration-tests/spring-boot-server-tests")
project(":spring-boot-starter-log4j2").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-log4j2")
project(":spring-boot-starter").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter")
project(":spring-boot-starter-activemq").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-activemq")
project(":spring-boot-starter-cache").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-cache")
project(":spring-boot-autoconfigure").projectDir = file("spring-boot-project/spring-boot-autoconfigure")
project(":spring-boot-starter-thymeleaf").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-thymeleaf")
project(":spring-boot-configuration-processor-tests").projectDir = file("spring-boot-tests/spring-boot-integration-tests/spring-boot-configuration-processor-tests")
project(":spring-boot-starters").projectDir = file("spring-boot-project/spring-boot-starters")
project(":spring-boot-starter-data-ldap").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-data-ldap")
project(":spring-boot-dependencies").projectDir = file("spring-boot-project/spring-boot-dependencies")
project(":spring-boot-tools").projectDir = file("spring-boot-project/spring-boot-tools")
project(":spring-boot-starter-jdbc").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-jdbc")
project(":spring-boot").projectDir = file("spring-boot-project/spring-boot")
project(":spring-boot-starter-data-rest").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-data-rest")
project(":spring-boot-starter-data-mongodb-reactive").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-data-mongodb-reactive")
project(":spring-boot-starter-groovy-templates").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-groovy-templates")
project(":spring-boot-starter-mustache").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-mustache")
project(":spring-boot-starter-freemarker").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-freemarker")
project(":spring-boot-starter-data-neo4j").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-data-neo4j")
project(":spring-boot-maven-plugin").projectDir = file("spring-boot-project/spring-boot-tools/spring-boot-maven-plugin")
project(":spring-boot-autoconfigure-processor").projectDir = file("spring-boot-project/spring-boot-tools/spring-boot-autoconfigure-processor")
project(":spring-boot-starter-data-redis-reactive").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-data-redis-reactive")
project(":spring-boot-starter-web").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-web")
project(":spring-boot-starter-oauth2-client").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-oauth2-client")
project(":spring-boot-starter-artemis").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-artemis")
project(":spring-boot-starter-tomcat").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-tomcat")
project(":spring-boot-starter-data-jpa").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-data-jpa")
project(":spring-boot-gradle-plugin").projectDir = file("spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin")
project(":spring-boot-starter-data-mongodb").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-data-mongodb")
project(":spring-boot-starter-security").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-security")
project(":spring-boot-starter-batch").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-batch")
project(":spring-boot-starter-webflux").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-webflux")
project(":spring-boot-starter-cloud-connectors").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-cloud-connectors")
project(":spring-boot-actuator").projectDir = file("spring-boot-project/spring-boot-actuator")
project(":spring-boot-starter-quartz").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-quartz")
project(":spring-boot-properties-migrator").projectDir = file("spring-boot-project/spring-boot-properties-migrator")
project(":spring-boot-loader-tools").projectDir = file("spring-boot-project/spring-boot-tools/spring-boot-loader-tools")
project(":spring-boot-launch-script-tests").projectDir = file("spring-boot-tests/spring-boot-integration-tests/spring-boot-launch-script-tests")
project(":spring-boot-actuator-autoconfigure").projectDir = file("spring-boot-project/spring-boot-actuator-autoconfigure")
project(":spring-boot-starter-jooq").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-jooq")
project(":spring-boot-starter-aop").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-aop")
project(":spring-boot-starter-json").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-json")
project(":spring-boot-starter-oauth2-resource-server").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-oauth2-resource-server")
project(":spring-boot-integration-tests").projectDir = file("spring-boot-tests/spring-boot-integration-tests")
project(":spring-boot-starter-amqp").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-amqp")
project(":spring-boot-devtools").projectDir = file("spring-boot-project/spring-boot-devtools")
project(":spring-boot-test-autoconfigure").projectDir = file("spring-boot-project/spring-boot-test-autoconfigure")
project(":spring-boot-starter-data-elasticsearch").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-data-elasticsearch")
project(":spring-boot-starter-hateoas").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-hateoas")
project(":spring-boot-configuration-processor").projectDir = file("spring-boot-project/spring-boot-tools/spring-boot-configuration-processor")
project(":spring-boot-starter-logging").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-logging")
project(":spring-boot-starter-websocket").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-websocket")
project(":spring-boot-starter-data-solr").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-data-solr")
project(":spring-boot-starter-mail").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-mail")
project(":spring-boot-starter-jersey").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-jersey")
project(":spring-boot-starter-data-couchbase-reactive").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-data-couchbase-reactive")
project(":spring-boot-antlib").projectDir = file("spring-boot-project/spring-boot-tools/spring-boot-antlib")
project(":spring-boot-starter-data-cassandra-reactive").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-data-cassandra-reactive")
project(":spring-boot-starter-undertow").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-undertow")
project(":spring-boot-parent").projectDir = file("spring-boot-project/spring-boot-parent")
project(":spring-boot-starter-data-jdbc").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-data-jdbc")
project(":spring-boot-starter-reactor-netty").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-reactor-netty")
project(":spring-boot-starter-data-couchbase").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-data-couchbase")
project(":spring-boot-starter-jta-bitronix").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-jta-bitronix")
project(":spring-boot-test-support").projectDir = file("spring-boot-project/spring-boot-tools/spring-boot-test-support")
project(":spring-boot-starter-web-services").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-web-services")
project(":spring-boot-test").projectDir = file("spring-boot-project/spring-boot-test")
project(":spring-boot-starter-parent").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-parent")
project(":spring-boot-hibernate52-tests").projectDir = file("spring-boot-tests/spring-boot-integration-tests/spring-boot-hibernate52-tests")
project(":spring-boot-starter-data-cassandra").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-data-cassandra")
project(":spring-boot-configuration-metadata").projectDir = file("spring-boot-project/spring-boot-tools/spring-boot-configuration-metadata")
project(":spring-boot-starter-jetty").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-jetty")
project(":spring-boot-loader").projectDir = file("spring-boot-project/spring-boot-tools/spring-boot-loader")
project(":spring-boot-starter-test").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-test")
project(":spring-boot-starter-jta-atomikos").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-jta-atomikos")
project(":spring-boot-starter-integration").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-integration")
project(":spring-boot-devtools-tests").projectDir = file("spring-boot-tests/spring-boot-integration-tests/spring-boot-devtools-tests")
project(":spring-boot-starter-actuator").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-actuator")
project(":spring-boot-starter-data-redis").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-data-redis")
project(":spring-boot-starter-validation").projectDir = file("spring-boot-project/spring-boot-starters/spring-boot-starter-validation")
project(":spring-boot-docs").projectDir = file("spring-boot-project/spring-boot-docs")
